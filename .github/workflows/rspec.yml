name: rspec

on:
  push:
    branches: [ main ]
  pull_request:

concurrency:
  group: '${{ github.workflow }}-${{ github.job }}-${{ github.head_ref || github.ref_name }}'
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      head_tag: ${{ steps.check.outputs.head_tag }}
      foreign_pr: ${{ steps.check.outputs.foreign_pr }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Retrieve tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/* || true
      - name: Set output variables
        id: check
        run: |
          fpr="no"
          tag=""
          if [[ "${{ github.ref }}" == refs/heads/* ]]; then
            tag="$(git tag --points-at HEAD)"
          elif [[ "${{ github.ref }}" == refs/pull/* ]] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.event.pull_request.base.repo.full_name }}" ]; then
            fpr="yes"
          fi
          echo "::set-output name=foreign_pr::${fpr}"
          echo "::set-output name=head_tag::${tag}"

  build:
    name: Test on Ruby ${{ matrix.ruby }} ${{ matrix.os }}
    needs: prepare
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        ruby: [ '2.6', '2.7', '3.0', '3.1' ]
        os: [ ubuntu-18.04, ubuntu-latest, windows-latest, macos-latest ]
        experimental: [ false ]

    steps:
      - uses: actions/checkout@master

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true

      - if: matrix.os == 'macos-latest'
        run: brew install lcdf-typetools

      - if: matrix.os == 'macos-latest'
        run: bundle exec rspec
        env:
          TEST_ENV: CI

      - if: matrix.os == 'windows-latest' && matrix.ruby == '2.4'
        run: curl -O https://curl.se/ca/cacert.pem

      - if: matrix.os == 'windows-latest' && matrix.ruby == '2.4'
        run: bundle exec rspec --tag ~dev
        env:
          SSL_CERT_FILE: cacert.pem

      - if: matrix.os != 'macos-latest' || matrix.os == 'windows-latest' && matrix.ruby == '2.4'
        run: bundle exec rspec --tag ~dev
        env:
          TEST_ENV: CI